
```{r}
library(shiny)
library(leaflet)
library(rjson)
library(jsonlite)
library(scales)
library(RColorBrewer)
library(readr)
library(tidyverse)
library(sf)
library(dplyr)
```


```{r}
election_data_combined <- read_csv("data for app/election_data_wide_geo.csv")
#election_data_combined <- election_data_wide_geo

#change data type to numeric
election_data_combined$Lat <- as.numeric(as.character(election_data_combined$Lat))
election_data_combined$Long <- as.numeric(as.character(election_data_combined$Long))

```


```{r}
#shape file for counties      
nc <- st_read(system.file("shape/nc.shp", package="sf"))
#combining election data with shape file
nc <- nc |>
rename(County = NAME) |>
  mutate(County = str_to_upper(County)) 

election_data_combined2 <- left_join(election_data_combined, nc, by = "County")
#selecting county
selected_county <- filter(election_data_combined2, County == "MECKLENBURG")
    pal_colors <- colorNumeric("Purples", domain = election_data_combined$Votes_REP)
    
    map <- sf(data = selected_county) |>
        addTiles() |> 
        addPolygons(
        fillColor = ~pal_colors(Votes_REP),
        fillOpacity = 0.5,
        color = "black",
        weight = 2,
        popup = ~paste("Republican Votes: ", Votes_REP),
        label = ~paste("Republican Votes: ", Votes_REP)
      ) |>
      setView(lng = selected_county$Long, lat = selected_county$Lat, zoom = 8)
  
  
  map
```

